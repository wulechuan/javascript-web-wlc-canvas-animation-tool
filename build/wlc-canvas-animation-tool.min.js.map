{"version":3,"sources":["wlc-canvas-animation-tool.js"],"names":["wlcCanvasAnimationController","canvas","a","b","_init","canvasContextType","initOptions","regExpCanvasContextType","data","privateData","this","drawFrame","match","trim","toLowerCase","canvasContext","elements","getContext","state","bgColor","settings","defaultBgColor","config","call","options","_inputTemp","isValidColor","parseFloat","timeOffset","isNaN","drawingFramesCountLimitation","NaN","parseInt","getData","copy","key","getCanvas","clearCanvas","shouldStopAnimation","clearRect","width","height","stopAnimation","shouldClearCanvas","animationIsStopped","animationIsPaused","startAnimation","animationStartWallTime","Date","getTime","drawnFramesCount","boundMethods","drawNextFrame","pauseAnimation","resumeAnimation","drawOneFrame","localTimeInSeconds","drawOneFrameOnTime","timeInSeconds","_drawOrClearBg","_drawNextFrame","console","info","log","requestAnimationFrame","ctx","fillStyle","fillRect","Node","document","getElementById","isJQueryWrappedObjectOrAlike","tagName","canvasContainer","createElement","appendChild","error","window","bind","object","isJQueryWrappedObject","Object","getPrototypeOf","jquery","color"],"mappings":"AA0DA,SAASA,6BAA6BC,EAAQC,EAAGC,GA+FhD,SAASC,EAAMF,EAAGC,GACjB,IAAIE,EAAmBC,EACnBC,EAA0B,uBAC1BC,EAAOC,EAAYD,KAEN,iBAANN,GAAkBA,IAC5BI,EAAcJ,EAEG,mBAANC,EACVO,KAAKC,UAAYR,EACM,iBAANA,GAAkBA,EAAES,MAAML,KAC3CF,EAAoBF,EAAEU,OAAOC,cAC7BN,EAAKH,kBAAoBA,IAIV,iBAANF,GAAkBA,IAC5BG,EAAcH,EAEG,mBAAND,EACVQ,KAAKC,UAAYT,EACM,iBAANA,GAAkBA,EAAEU,MAAML,KAC3CF,EAAoBH,EAAEW,OAAOC,cAC7BN,EAAKH,kBAAoBA,IAK3BG,EAAKO,cAAgBN,EAAYO,SAASf,OAAOgB,WAAWT,EAAKH,mBACjEa,EAAMC,QAAUC,EAASC,eAEzBC,EAAOC,KAAKb,KAAMJ,GAInB,SAASgB,EAAOE,GAEf,IAAIC,EAkCJ,OA9BAA,GALAD,EAAUA,OAKWL,QACjBnB,6BAA6B0B,aAAaD,KAC7CP,EAAMC,QAAUM,GAKjBA,EAAaE,WAAWH,EAAQI,YAC3BC,MAAMJ,KACVP,EAAMU,WAAaH,GAKpBA,EAAaD,EAAQM,6BACjBD,MAAMJ,GACTP,EAAMY,6BAA+BC,KAErCN,EAAaO,SAASR,EAAQM,8BACzBD,MAAMJ,KACVP,EAAMY,6BAA+BL,IAMb,mBAD1BA,EAAaD,EAAQb,aAEpBD,KAAKC,UAAYa,EAAQb,WAGnBD,KAGR,SAASuB,IACR,IAAIC,KACJ,IAAK,IAAIC,KAAO1B,EACfyB,EAAKC,GAAO1B,EAAY0B,GAEzB,OAAOD,EAGR,SAASE,IACR,OAAO3B,EAAYO,SAASf,OAG7B,SAASoC,EAAYC,GACpB,IAAIrC,EAASQ,EAAYO,SAASf,OAKlC,OAJAQ,EAAYD,KAAKO,cAAcwB,UAAU,EAAG,EAAGtC,EAAOuC,MAAOvC,EAAOwC,QAEhEH,GAAqB5B,KAAKgC,gBAEvBhC,KAGR,SAASgC,EAAcC,GAMtB,OALAzB,EAAM0B,oBAAqB,EAC3B1B,EAAM2B,mBAAoB,EAEtBF,GAAmBjC,KAAK2B,cAErB3B,KAGR,SAASoC,EAAeH,GACvB,IAAKzB,EAAM2B,oBAAsB3B,EAAM0B,mBACtC,OAAOlC,KAGRQ,EAAM2B,mBAAoB,EAC1B3B,EAAM0B,oBAAqB,EAE3B,IAAIpC,EAAOC,EAAYD,KAMvB,OALAA,EAAKuC,wBAAyB,IAAIC,MAAOC,UAAY/B,EAAMU,WAC3DpB,EAAK0C,iBAAmB,EAExBC,EAAaC,cAAcT,GAEpBjC,KAGR,SAAS2C,IACR,IAAInC,EAAM0B,mBAIV,OAFA1B,EAAM2B,mBAAoB,EAEnBnC,KAGR,SAAS4C,IACR,IAAIpC,EAAM0B,oBAAuB1B,EAAM2B,kBAKvC,OAHA3B,EAAM2B,mBAAoB,EAC1BM,EAAaC,gBAEN1C,KAGR,SAAS6C,IACR,IAAIC,IAAsB,IAAIR,MAAOC,UAAYxC,EAAYD,KAAKuC,wBAA0B,IAG5F,OAFArC,KAAK+C,mBAAmBD,GAEjB9C,KAGR,SAAS+C,EAAmBC,GAI3B,OAHAC,EAAepC,KAAKb,KAAMgD,GAC1BhD,KAAKC,UAAUF,EAAYO,SAASf,OAAQQ,EAAYD,KAAKO,cAAe2C,GAErEhD,KAGR,SAASkD,EAAejB,GACvB,IAAIzB,EAAM2B,oBAAqB3B,EAAM0B,mBAArC,CAEA,GAA8B,mBAAnBlC,KAAKC,UAGf,OAFAkD,QAAQC,KAAK,8EACbpD,KAAKgC,gBAKFC,GAAmBjC,KAAK2B,cAE5B,IAAI7B,EAAOC,EAAYD,KAGvB,KADAA,EAAK0C,iBACuBhC,EAAMY,6BAGjC,OAFA+B,QAAQE,IAAI,iEACZrD,KAAKgC,gBAINhC,KAAK6C,eAELS,EAAsBb,EAAaC,gBAGpC,SAASO,IACR,IAAI1D,EAASQ,EAAYO,SAASf,OAE9BgE,EADOxD,EAAYD,KACRO,cAEO,OAAlBG,EAAMC,SAAsC,KAAlBD,EAAMC,UAAoC,IAAlBD,EAAMC,QAC3DT,KAAK2B,eAEL4B,EAAIC,UAAYhD,EAAMC,QACtB8C,EAAIE,SAAS,EAAG,EAAGlE,EAAOuC,MAAOvC,EAAOwC,SAzR1C,IAAIrB,GACHC,eAAgB,IAGbZ,GACHO,UACCf,OAAQ,MAETO,MACCH,kBAAmB,KACnBU,cAAe,KACfgC,uBAAwBhB,IACxBmB,iBAAkB,IAIhBhC,GACH0B,oBAAoB,EACpBC,mBAAmB,EACnBf,6BAA8BC,IAC9BH,WAAY,GAkBb,GAVM3B,aAAkBmE,OAEtBnE,EADqB,iBAAXA,EACDoE,SAASC,eAAerE,GACvBD,6BAA6BuE,6BAA6BtE,GAC3DA,EAAO,GAEP,MAINA,EAAL,CAKA,IAAKA,EAAOuE,QAAQ5D,MAAM,WAAY,CACrC,IAAI6D,EAAkBxE,EACtBA,EAASoE,SAASK,cAAc,UAChCD,EAAgBE,YAAY1E,GAK7B,GAFAQ,EAAYO,SAASf,OAASA,EAEZ,iBAANC,GAA+B,iBAANC,GAAkBD,GAAKC,GAC1C,iBAAND,GAA+B,iBAANC,GACnB,mBAAND,GAAiC,mBAANC,EAEtC0D,SAAWA,QAAQe,MAAM,0BAJ1B,CAUA,IAAIZ,EAAwBa,OAAOb,sBAEnC5D,EAAMmB,KAAKb,KAAMR,EAAGC,GAGpBO,KAAKQ,MAAQA,EACbR,KAAKY,OAASA,EAAOwD,KAAKpE,MAC1BA,KAAKuB,QAAUA,EAAQ6C,KAAKpE,MAC5BA,KAAK0B,UAAYA,EAAU0C,KAAKpE,MAChCA,KAAK2B,YAAcA,EAAYyC,KAAKpE,MAEpCA,KAAKgC,cAAgBA,EAAcoC,KAAKpE,MACxCA,KAAKoC,eAAiBA,EAAegC,KAAKpE,MAC1CA,KAAK2C,eAAiBA,EAAeyB,KAAKpE,MAC1CA,KAAK4C,gBAAkBA,EAAgBwB,KAAKpE,MAE5CA,KAAK6C,aAAeA,EAAauB,KAAKpE,MACtCA,KAAK+C,mBAAqBA,EAAmBqB,KAAKpE,MAElD,IAAIyC,GACHC,cAAeQ,EAAekB,KAAKpE,OAI/BQ,EAAM0B,oBACVlC,KAAKoC,uBA/CLe,SAAWA,QAAQe,MAAM,4BAuP3B5E,6BAA6BuE,6BAA+B,SAAUQ,GACrE,OAAO/E,6BAA6BgF,sBAAsBD,IACtDA,EAAO,aAAcX,MAG1BpE,6BAA6BgF,sBAAwB,SAAUD,GAC9D,QAASE,OAAOC,eAAeH,GAAQI,QAGxCnF,6BAA6B0B,aAAe,SAAU0D,GACrD,QAASA","file":"wlc-canvas-animation-tool.min.js","sourcesContent":["/**\n * Constructor for create an instant object that helps making canvas animations.\n * \n * @constructor\n * @author 吴乐川 <wulechuan@live.com>\n * @argument {!(string|Node|jQueryObject)} canvas the canvas element,\n * \tor the container object that is NOT a canvas element,\n *  under which a new canvas element will be created automatically.\n * \n * @argument {?(string|function|object)} a Multi-purpose.\n * \t\tIf 1 argument is provided:\n * \t\t>\tIf it's a string, it's treated as the canvas context type;\n * \t\t\tIf it's an object, it's treated as the \"options\" objet;\n * \t\t\tIf it's a function, it's treated as the \"drawFrame\" method.\n * \n * \t\tIf 2 arguments are provided:\n * \t\t>\tThe one that is a string is treated as the canvas context type;\n * \t\t\tThe one that is an object is treated as the \"options\" objet;\n * \t\t\tThe one that is a function is treated as the \"drawFrame\" method;\n * \n * \t\t\tTf both are of the same type, e. g. both are functions,\n * \t\t\tan error will be logged and construction will fail.\n * \n * \t\t\tIf a function is provided, while the other argument being an object,\n * \t\t\tand contains a function property named \"drawFrame\",\n * \t\t\tthen the property of the object argument is taken,\n * \t\t\tthe function argument is ignored.\n * \n * @argument {?(string|function|object)} b Multi-purpose.\n * >\tSee argument a.\n * \n * \n * @example\n * \tvar myCanvas = document.querySelector('#my-canvas');\n *  var myAniCtrl = new wlcCanvasAnimationController(\n * \t\tmyCanvas,\n * \t\tfunction myFancyDrawingFunction () { ... }\n *  );\n * \n * @example\n * \tvar myCanvas = document.querySelector('#my-canvas');\n *  var myAniCtrl = new wlcCanvasAnimationController(\n * \t\tmyCanvas,\n * \t\t{\n * \t\t\tdrawFrame: function myFancyDrawingFunction() { ... }\n * \t\t}\n *  );\n * \n * @example\n * \tvar myCanvas = document.querySelector('#my-canvas');\n *  var myAniCtrl = new wlcCanvasAnimationController(\n * \t\tmyCanvas,\n * \t\t'3d',\n * \t\t{\n * \t\t\tdrawFrame: function myFancyDrawingFunction() { ... }\n * \t\t}\n *  );\n */\nfunction wlcCanvasAnimationController(canvas, a, b) {\n\tvar settings = {\n\t\tdefaultBgColor: ''\n\t};\n\n\tvar privateData = {\n\t\telements: {\n\t\t\tcanvas: null\n\t\t},\n\t\tdata: {\n\t\t\tcanvasContextType: '2d',\n\t\t\tcanvasContext: null,\n\t\t\tanimationStartWallTime: NaN,\n\t\t\tdrawnFramesCount: 0\n\t\t}\n\t};\n\n\tvar state = {\n\t\tanimationIsStopped: true,\n\t\tanimationIsPaused: false, \n\t\tdrawingFramesCountLimitation: NaN, // In case we need to draw like 1000 frames and then stop there for ever\n\t\ttimeOffset: 0 // in milliseconds\n\t};\n\n\n\n\n\n\n\tif (!(canvas instanceof Node)) {\n\t\tif (typeof canvas === 'string') {\n\t\t\tcanvas = document.getElementById(canvas);\n\t\t} else if (wlcCanvasAnimationController.isJQueryWrappedObjectOrAlike(canvas)) {\n\t\t\tcanvas = canvas[0];\n\t\t} else {\n\t\t\tcanvas = null;\n\t\t}\n\t}\n\n\tif (!canvas) {\n\t\tconsole && console.error('Invalid canvas provided.');\n\t\treturn;\n\t}\n\n\tif (!canvas.tagName.match(/canvas/i)) {\n\t\tvar canvasContainer = canvas;\n\t\tcanvas = document.createElement('canvas');\n\t\tcanvasContainer.appendChild(canvas);\n\t}\n\n\tprivateData.elements.canvas = canvas;\n\n\tif ((typeof a === 'object' && typeof b === 'object' && a && b)\n\t\t|| (typeof a === 'string' && typeof b === 'string')\n\t\t|| (typeof a === 'function' && typeof b === 'function')\n\t) {\n\t\tconsole && console.error('Invalid arguments.');\n\t\treturn;\n\t}\n\n\n\n\tvar requestAnimationFrame = window.requestAnimationFrame;\n\n\t_init.call(this, a, b);\n\n\n\tthis.state = state;\n\tthis.config = config.bind(this);\n\tthis.getData = getData.bind(this);\n\tthis.getCanvas = getCanvas.bind(this);\n\tthis.clearCanvas = clearCanvas.bind(this);\n\n\tthis.stopAnimation = stopAnimation.bind(this);\n\tthis.startAnimation = startAnimation.bind(this);\n\tthis.pauseAnimation = pauseAnimation.bind(this);\n\tthis.resumeAnimation = resumeAnimation.bind(this);\n\n\tthis.drawOneFrame = drawOneFrame.bind(this);\n\tthis.drawOneFrameOnTime = drawOneFrameOnTime.bind(this);\n\n\tvar boundMethods = {\n\t\tdrawNextFrame: _drawNextFrame.bind(this)\n\t};\n\n\n\tif (!state.animationIsStopped) {\n\t\tthis.startAnimation();\n\t}\n\n\n\n\n\n\n\tfunction _init(a, b) {\n\t\tvar canvasContextType, initOptions;\n\t\tvar regExpCanvasContextType = /\\s*(2d|3d|webgl)\\s*/i;\n\t\tvar data = privateData.data;\n\n\t\tif (typeof a === 'object' && a) {\n\t\t\tinitOptions = a;\n\n\t\t\tif (typeof b === 'function') {\n\t\t\t\tthis.drawFrame = b;\n\t\t\t} else if (typeof b === 'string' && b.match(regExpCanvasContextType)) {\n\t\t\t\tcanvasContextType = b.trim().toLowerCase();\n\t\t\t\tdata.canvasContextType = canvasContextType;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof b === 'object' && b) {\n\t\t\tinitOptions = b;\n\n\t\t\tif (typeof a === 'function') {\n\t\t\t\tthis.drawFrame = a;\n\t\t\t} else if (typeof a === 'string' && a.match(regExpCanvasContextType)) {\n\t\t\t\tcanvasContextType = a.trim().toLowerCase();\n\t\t\t\tdata.canvasContextType = canvasContextType;\n\t\t\t}\n\t\t}\n\n\n\t\tdata.canvasContext = privateData.elements.canvas.getContext(data.canvasContextType);\n\t\tstate.bgColor = settings.defaultBgColor;\n\n\t\tconfig.call(this, initOptions);\n\n\t}\n\n\tfunction config(options) {\n\t\toptions = options || {};\n\t\tvar _inputTemp;\n\n\n\n\t\t_inputTemp = options.bgColor;\n\t\tif (wlcCanvasAnimationController.isValidColor(_inputTemp)) {\n\t\t\tstate.bgColor = _inputTemp;\n\t\t}\n\n\n\n\t\t_inputTemp = parseFloat(options.timeOffset);\n\t\tif (!isNaN(_inputTemp)) {\n\t\t\tstate.timeOffset = _inputTemp;\n\t\t}\n\n\n\n\t\t_inputTemp = options.drawingFramesCountLimitation;\n\t\tif (isNaN(_inputTemp)) {\n\t\t\tstate.drawingFramesCountLimitation = NaN;\n\t\t} else {\n\t\t\t_inputTemp = parseInt(options.drawingFramesCountLimitation);\n\t\t\tif (!isNaN(_inputTemp)) {\n\t\t\t\tstate.drawingFramesCountLimitation = _inputTemp;\n\t\t\t}\n\t\t}\n\n\n\t\t_inputTemp = options.drawFrame;\n\t\tif (typeof _inputTemp === 'function') {\n\t\t\tthis.drawFrame = options.drawFrame;\n\t\t}\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction getData() {\n\t\tvar copy = {};\n\t\tfor (var key in privateData) {\n\t\t\tcopy[key] = privateData[key];\n\t\t}\n\t\treturn copy;\n\t}\n\n\tfunction getCanvas() {\n\t\treturn privateData.elements.canvas;\n\t}\n\n\tfunction clearCanvas(shouldStopAnimation) {\n\t\tvar canvas = privateData.elements.canvas;\n\t\tprivateData.data.canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tif (shouldStopAnimation) this.stopAnimation();\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction stopAnimation(shouldClearCanvas) {\n\t\tstate.animationIsStopped = true;\n\t\tstate.animationIsPaused = false;\n\n\t\tif (shouldClearCanvas) this.clearCanvas();\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction startAnimation(shouldClearCanvas) {\n\t\tif (!state.animationIsPaused && !state.animationIsStopped) {\n\t\t\treturn this;\n\t\t}\n\n\t\tstate.animationIsPaused = false;\n\t\tstate.animationIsStopped = false;\n\n\t\tvar data = privateData.data;\n\t\tdata.animationStartWallTime = new Date().getTime() - state.timeOffset;\n\t\tdata.drawnFramesCount = 0;\n\n\t\tboundMethods.drawNextFrame(shouldClearCanvas);\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction pauseAnimation() {\n\t\tif (state.animationIsStopped) return;\n\n\t\tstate.animationIsPaused = true;\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction resumeAnimation() {\n\t\tif (state.animationIsStopped || !state.animationIsPaused) return;\n\n\t\tstate.animationIsPaused = false;\n\t\tboundMethods.drawNextFrame();\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction drawOneFrame() {\n\t\tvar localTimeInSeconds = (new Date().getTime() - privateData.data.animationStartWallTime) / 1000;\n\t\tthis.drawOneFrameOnTime(localTimeInSeconds);\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction drawOneFrameOnTime(timeInSeconds) {\n\t\t_drawOrClearBg.call(this, timeInSeconds);\n\t\tthis.drawFrame(privateData.elements.canvas, privateData.data.canvasContext, timeInSeconds);\n\n\t\treturn this; // for chaining invocations\n\t}\n\n\tfunction _drawNextFrame(shouldClearCanvas) {\n\t\tif (state.animationIsPaused || state.animationIsStopped) return;\n\n\t\tif (typeof this.drawFrame !== 'function') {\n\t\t\tconsole.info('The drawFrame \"method\" is not provided yet. Animation will not start.');\n\t\t\tthis.stopAnimation();\n\t\t\treturn;\n\t\t}\n\n\t\t// I'd like to clear *BEFORE* checking drawnFramesCount\n\t\tif (shouldClearCanvas) this.clearCanvas();\n\n\t\tvar data = privateData.data;\n\n\t\tdata.drawnFramesCount++;\n\t\tif (data.drawnFramesCount > state.drawingFramesCountLimitation) {\n\t\t\tconsole.log('Animation frame limitation met. Animation will stop now.');\n\t\t\tthis.stopAnimation();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.drawOneFrame();\n\n\t\trequestAnimationFrame(boundMethods.drawNextFrame);\n\t}\n\n\tfunction _drawOrClearBg() {\n\t\tvar canvas = privateData.elements.canvas;\n\t\tvar data = privateData.data;\n\t\tvar ctx = data.canvasContext;\n\n\t\tif (state.bgColor === null || state.bgColor === '' || state.bgColor === false) {\n\t\t\tthis.clearCanvas();\n\t\t} else {\n\t\t\tctx.fillStyle = state.bgColor;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\t}\n}\n\nwlcCanvasAnimationController.isJQueryWrappedObjectOrAlike = function (object) {\n\treturn wlcCanvasAnimationController.isJQueryWrappedObject(object)\n\t\t|| object[0] instanceof Node;\n};\n\nwlcCanvasAnimationController.isJQueryWrappedObject = function (object) {\n\treturn !!Object.getPrototypeOf(object).jquery;\n};\n\nwlcCanvasAnimationController.isValidColor = function (color) {\n\treturn !!color;\n};\n"]}